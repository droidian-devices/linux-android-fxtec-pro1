#!/usr/bin/make -f

# TODO: Move most of this into a debhelper plugin

include $(CURDIR)/debian/kernel-info.mk

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS := $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
	NUMJOBS := 1
endif

export DEB_TARGET_MULTIARCH = $(shell dpkg-architecture -qDEB_TARGET_MULTIARCH)

KERNEL_RELEASE = $(KERNEL_BASE_VERSION)-$(DEVICE_VENDOR)-$(DEVICE_MODEL)
OUT = $(CURDIR)/out
KERNEL_OUT = $(OUT)/KERNEL_OBJ
BUILD_COMMAND = LDFLAGS="" CFLAGS="" $(MAKE) KERNELRELEASE=$(KERNEL_RELEASE) ARCH=$(KERNEL_ARCH) -j$(NUMJOBS) O=$(KERNEL_OUT)

%:
	dh $@

debian/control: debian/control.in
	sed -e "s|@KERNEL_BASE_VERSION@|$(KERNEL_BASE_VERSION)|g" \
		-e "s|@DEVICE_VENDOR@|$(DEVICE_VENDOR)|g" \
		-e "s|@DEVICE_MODEL@|$(DEVICE_MODEL)|g" \
		-e "s|@DEVICE_FULL_NAME@|$(DEVICE_FULL_NAME)|g" \
		debian/control.in > debian/control

out/KERNEL_OBJ/.config: arch/$(KERNEL_ARCH)/configs/$(KERNEL_DEFCONFIG)
	$(BUILD_COMMAND) defconfig KBUILD_DEFCONFIG=$(KERNEL_DEFCONFIG)

out/kernel-stamp: out/KERNEL_OBJ/.config
	$(BUILD_COMMAND) $(KERNEL_BUILD_TARGET)
	touch $(OUT)/kernel-stamp

out/modules-stamp: out/kernel-stamp
	$(BUILD_COMMAND) modules
	touch $(OUT)/modules-stamp

out/dtb-stamp: out/kernel-stamp
	$(BUILD_COMMAND) dtbs
	touch $(OUT)/dtb-stamp

out/KERNEL_OBJ/target-dtb: out/kernel-stamp out/dtb-stamp
ifeq ($(KERNEL_IMAGE_WITH_DTB),1)
ifeq ($(KERNEL_IMAGE_WITH_DTB_OVERLAY),1)
			ufdt_apply_overlay $(KERNEL_OUT)/$(KERNEL_IMAGE_DTB) $(KERNEL_OUT)/$(KERNEL_IMAGE_DTB_OVERLAY) $(KERNEL_OUT)/dtb-merged
else
			cp $(KERNEL_IMAGE_DTB) $(KERNEL_OUT)/dtb-merged
endif
		cat $(KERNEL_OUT)/arch/$(KERNEL_ARCH)/boot/$(KERNEL_BUILD_TARGET) \
			$(KERNEL_OUT)/dtb-merged \
			> $@
else
		cp $(KERNEL_OUT)/arch/$(KERNEL_ARCH)/boot/$(KERNEL_BUILD_TARGET) $@
endif

out/KERNEL_OBJ/boot.img: out/KERNEL_OBJ/target-dtb
	mkbootimg \
		--kernel $(KERNEL_OUT)/target-dtb \
		--ramdisk /usr/lib/$(DEB_TARGET_MULTIARCH)/halium-generic-initramfs/initrd.img-halium-generic \
		--base $(KERNEL_BOOTIMAGE_BASE_OFFSET) \
		--kernel_offset $(KERNEL_BOOTIMAGE_KERNEL_OFFSET) \
		--ramdisk_offset $(KERNEL_BOOTIMAGE_INITRAMFS_OFFSET) \
		--second_offset $(KERNEL_BOOTIMAGE_SECONDIMAGE_OFFSET) \
		--tags_offset $(KERNEL_BOOTIMAGE_TAGS_OFFSET) \
		--pagesize $(KERNEL_BOOTIMAGE_PAGE_SIZE) \
		--cmdline "$(KERNEL_BOOTIMAGE_CMDLINE)" \
		-o $@

override_dh_auto_configure: debian/control out/KERNEL_OBJ/.config

override_dh_auto_build: out/KERNEL_OBJ/target-dtb out/KERNEL_OBJ/boot.img out/modules-stamp out/dtb-stamp

override_dh_auto_install:
	mkdir -p $(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)/boot
	$(BUILD_COMMAND) modules_install INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH=$(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)
	cp -v $(KERNEL_OUT)/System.map $(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)/boot/System.map-$(KERNEL_RELEASE)
	cp -v $(KERNEL_OUT)/target-dtb $(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)/boot/$(KERNEL_BUILD_TARGET)-$(KERNEL_RELEASE)
	cp -v $(KERNEL_OUT)/.config $(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)/boot/config-$(KERNEL_RELEASE)
	rm -f $(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)/lib/modules/$(KERNEL_RELEASE)/build
	rm -f $(CURDIR)/debian/linux-image-$(KERNEL_RELEASE)/lib/modules/$(KERNEL_RELEASE)/source

	mkdir -p $(CURDIR)/debian/linux-bootimage-$(KERNEL_RELEASE)/boot
	cp -v $(KERNEL_OUT)/boot.img $(CURDIR)/debian/linux-bootimage-$(KERNEL_RELEASE)/boot/boot.img-$(KERNEL_RELEASE)

	mkdir -p $(CURDIR)/debian/linux-headers-$(KERNEL_RELEASE)/lib/modules/$(KERNEL_RELEASE)
	$(CURDIR)/debian/extract_headers.sh $(KERNEL_RELEASE) $(CURDIR) $(KERNEL_OUT) $(CURDIR)/debian/linux-headers-$(KERNEL_RELEASE) $(KERNEL_ARCH)

override_dh_auto_clean:
	rm -rf $(OUT)
	rm -rf include/config/
